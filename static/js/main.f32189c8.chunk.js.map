{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","controls","balance","history","dashboard","toast","configure","Controls","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","_ref","value","target","setState","input","handleClick","event","preventDefault","name","state","_this$props","handleTransaction","enteredNumber","Number","actualDate","Date","toLocaleString","newTransaction","id","shortid","generate","type","react_default","a","createElement","className","styles","onChange","placeholder","onClick","Component","Balance","transactions","filter","reduce","acc","val","role","aria-label","TransactionHistory","map","key","Dashboard","prevState","concat","toConsumableArray","_this$state","Controls_Controls","components_Balance_Balance","components_TransactionHistory_TransactionHistory","React","App","Dashboard_Dashboard","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f32189c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls___pXY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1lgwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__1QIzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__18cra\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Controls.module.css';\n\ntoast.configure();\n\nexport default class Controls extends Component {\n  static propTypes = {\n    handleTransaction: PropTypes.func.isRequired,\n    balance: PropTypes.number.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n    };\n  }\n\n  handleInput = ({ target }) => {\n    const { value } = target;\n    this.setState({\n      input: value,\n    });\n  };\n\n  handleClick = event => {\n    event.preventDefault();\n\n    const { name } = event.target;\n    const { input } = this.state;\n    const { handleTransaction, balance } = this.props;\n\n    const enteredNumber = Number(input);\n    const actualDate = new Date().toLocaleString();\n\n    const newTransaction = {\n      id: shortid.generate(),\n      type: name,\n      enteredNumber,\n      actualDate,\n    };\n\n    if (\n      balance < newTransaction.enteredNumber &&\n      newTransaction.type === 'withdraw'\n    ) {\n      toast('На счету недостаточно средств для проведения операции!');\n      this.setState({ input: '' });\n      return;\n    }\n\n    if (input === '' || Number(input) < 0) {\n      toast('Введите сумму для проведения операции!');\n      this.setState({ input: '' });\n      return;\n    }\n\n    handleTransaction(newTransaction);\n    this.setState({ input: '' });\n  };\n\n  render() {\n    const { input } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input\n          type=\"number\"\n          value={input}\n          onChange={this.handleInput}\n          placeholder=\"Enter your number\"\n        />\n        <button type=\"button\" name=\"deposit\" onClick={this.handleClick}>\n          Deposit\n        </button>\n        <button type=\"button\" name=\"withdraw\" onClick={this.handleClick}>\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, transactions }) => {\n  const handleTransaction = type => {\n    const renderBalance = transactions\n      .filter(newTransaction => newTransaction.type === type)\n      .reduce((acc, val) => acc + val.enteredNumber, 0);\n    return renderBalance;\n  };\n\n  return (\n    <section className={styles.balance}>\n      <span role=\"img\" aria-label=\"deposit\">\n        ⬆️{handleTransaction('deposit')}$\n      </span>\n      <span role=\"img\" aria-label=\"withdraw\">\n        ⬇️{handleTransaction('withdraw')}\n      </span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      enteredNumber: PropTypes.number.isRequired,\n      actualDate: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(newTransaction => (\n          <tr key={newTransaction.id}>\n            <td>{newTransaction.type}</td>\n            <td>{newTransaction.enteredNumber}$</td>\n            <td>{newTransaction.actualDate}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      enteredNumber: PropTypes.number.isRequired,\n      actualDate: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport styles from './Dashboard.module.css';\n\nexport default class Dashboard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      transactions: [],\n      balance: 5000,\n    };\n  }\n\n  handleTransaction = newTransaction => {\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, newTransaction],\n      balance:\n        newTransaction.type === 'deposit'\n          ? prevState.balance + newTransaction.enteredNumber\n          : prevState.balance - newTransaction.enteredNumber,\n    }));\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          balance={balance}\n          handleTransaction={this.handleTransaction}\n        />\n        <Balance balance={balance} transactions={transactions} />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => {\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}